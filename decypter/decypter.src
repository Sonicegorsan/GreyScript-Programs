//command: decypter

//Подключение библиотеки шифровки
cryptools = include_lib("/lib/crypto.so")
print(include_lib(current_path() + "/crypto.so"))
if not cryptools then 
	cryptools = include_lib(current_path() + "/crypto.so")
end if
if not cryptools then 
	exit("Error: Missing crypto.so library in the /lib path or the current folder")
end if

//Создание функции получения пароля
GetPassword = function(enycripted_password)
	password = cryptools.decipher(enycripted_password)
	return password
end function


if params.len == 0 then
	files_list = [ "passwd", "Mail.txt","Bank.txt" ]
	file_found = false
	computer = get_shell.host_computer()
	//Ищем стандартные файлы в папке исполнения
	print("Trying to find files in current directory...")
	for file in files_list
		if computer.File(file) != null then
			print("We found file: " + file)
			file_found = true
		end if
	end for

	//Если нашли файлы, просим юзера ввести его имя
	if file_found == true then
		origFile = user_input("Enter file name to choose: ")
	else
	//Если нет,ищем на рабочем столе
		print("Trying to find files in desctop directory...")
		for file in files_list
			if computer.File(home_dir() + "/Desktop/" +  file) != null then
				print("We found file: " + file)
				file_found = true
			end if
		end for
	
		if file_found == true then
		origFile = home_dir() + "/Desktop/" + user_input("Enter file name to choose: ")
		else
			exit("Cannot find files in execution directory or desktop,exiting...")
		end if
		
	end if
end if	

if params.len == 1 then
	origFile = params[0] //Передача имени файла из переданных аргументов в переменную
end if
file = get_shell.host_computer.File(origFile)
if not file then exit("decipher: can't find " + origFile)
if file.is_binary then exit("decipher: can't read " + origFile + ". Binary file")
if not file.has_permission("r") then exit("decipher: can't read file. Permission denied")
if file.get_content.len == 0 then exit("decipher: no users found")
	
lines = file.get_content.split("\n") //Создает массив строк разделённых по символу новой строки

//Счётчик числа строк, содержащий двоеточие (скорее всего если юзер ничего не трогал, такая строка содержит связку из имени и пароля
//Крч считаем число строк,содержащих пароль
password_line_counter = 0
for line in lines
	if line.indexOf(":") != null then //Примитивная проверка на двоеточие в надежде, что это значит что это связка логин:пароль
		password_line_counter = password_line_counter + 1
	end if
end for
print("Passwords in file: " + password_line_counter)

password = null
line_counter = 1
for line in lines
	if line.len != 0 then
			user_password_pair_list = line.split(":")
			if user_password_pair_list.len != 2 then //Пропускаем не подходящие нам строки (в которых нет :, а значи и связки логин/пароль)
				continue
			end if
			user_name = user_password_pair_list[0]
			password = GetPassword(user_password_pair_list[1])
			if not password then 
				print("Can't find password :(")
				continue
			end if
			print(line_counter+")"+user_name+"@"+password)
			line_counter=line_counter + 1
	end if
end for
